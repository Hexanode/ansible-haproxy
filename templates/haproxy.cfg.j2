global
    log /dev/log    local0
    log /dev/log    local1 notice
    {% if haproxy_chroot != '' -%}
        chroot {{ haproxy_chroot }}
    {% endif -%}
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 10s
    user {{ haproxy_user }}
    group {{ haproxy_group }}
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # Default ciphers to use on SSL-enabled listening sockets.
    # For more information, see ciphers(1SSL). This list is from:
    #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

{% if haproxy_webstats -%}

listen stats
    bind            {{ haproxy_webstats_ip }}:{{ haproxy_webstats_port }}
    mode            http
    log             global
    maxconn         {{ haproxy_webstats_maxconn }}

    timeout client  100s
    timeout server  100s
    timeout connect 100s
    timeout queue   100s

    stats enable
    stats hide-version
    {% if haproxy_webstats_refreshtime != '' -%}
        stats refresh {{ haproxy_webstats_refreshtime }}
    {% endif -%}
    # stats scope .
    stats realm HAProxy\ Statistics
    stats show-node
    stats auth {{ haproxy_webstats_username }}:{{ haproxy_webstats_password }}
    stats uri  {{ haproxy_webstats_uri }}
{% endif %}

{% for frontend in haproxy_frontends_list %}
frontend {{ frontend.name }}
    bind {{ frontend.bind }}:{{ frontend.port }}
    mode {%- if frontend.mode is not defined %} http {%- else %} {{ frontend.mode }} {% endif %}

    {% for option in frontend.options -%}
        option {{ option.name }} {{ option.value }}
    {% endfor -%}
    default_backend {{ frontend.default_backend }}

{% endfor %}

{% for backend in haproxy_backends_list %}
backend {{ backend.name }}
    mode {%- if backend.mode is not defined %} http {%- else %} {{ backend.mode }} {% endif %}

    balance {{ backend.balance }}
    cookie SERVERID insert indirect
    {% for option in backend.options -%}
        option {{ option.name }} {{ option.value }}
    {% endfor -%}
    {% if backend.noforwardfor is not defined -%}
        option forwardfor
    {% endif -%}
    {% for backend_server in backend.backend_server_list -%}
        server {{ backend_server.name }} {{ backend_server.address }}:{{ backend_server.port }}
    {% endfor -%}

{% endfor %}
